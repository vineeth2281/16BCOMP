function LinkedList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 2
push pointer 0
return
function LinkedList.addFirst 1
push argument 0
pop pointer 0
push argument 1
call ListNode.new 1
pop local 0
push this 2
push constant 0
eq
not
if-goto LinkedList.0
push local 0
pop this 1
goto LinkedList.1
label LinkedList.0
push local 0
push this 0
call ListNode.setNext 2
pop temp 0
label LinkedList.1
push local 0
pop this 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function LinkedList.addLast 1
push argument 0
pop pointer 0
push argument 1
call ListNode.new 1
pop local 0
push this 2
push constant 0
eq
not
if-goto LinkedList.2
push local 0
pop this 0
goto LinkedList.3
label LinkedList.2
push this 1
push local 0
call ListNode.setNext 2
pop temp 0
label LinkedList.3
push local 0
pop this 1
push this 2
push constant 1
add
pop this 2
push constant 0
return
function LinkedList.removeFirst 2
push argument 0
pop pointer 0
push this 0
push constant 0
eq
not
if-goto LinkedList.4
push constant 1
neg
pop local 1
goto LinkedList.5
label LinkedList.4
push this 0
call ListNode.getValue 1
pop local 1
push this 0
pop local 0
push this 0
call ListNode.getNext 1
pop this 0
push local 0
call ListNode.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
eq
not
if-goto LinkedList.6
push constant 0
pop this 1
goto LinkedList.7
label LinkedList.6
label LinkedList.7
label LinkedList.5
push local 1
return
function LinkedList.removeLast 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
not
if-goto LinkedList.8
push constant 1
neg
pop local 1
goto LinkedList.9
label LinkedList.8
push this 1
call ListNode.getValue 1
pop local 1
push this 1
pop local 0
push this 1
call ListNode.getPrevious 1
pop this 1
push local 0
call ListNode.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
eq
not
if-goto LinkedList.10
push constant 0
pop this 0
goto LinkedList.11
label LinkedList.10
label LinkedList.11
label LinkedList.9
push local 1
return
function LinkedList.getSize 0
push argument 0
pop pointer 0
push this 2
return
function LinkedList.dispose 2
push argument 0
pop pointer 0
push this 0
pop local 0
push local 0
push constant 0
eq
not
not
if-goto LinkedList.12
push local 0
pop local 1
push local 0
call ListNode.getNext 1
pop local 0
push local 1
call ListNode.dispose 1
pop temp 0
goto LinkedList.13
label LinkedList.12
label LinkedList.13
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
