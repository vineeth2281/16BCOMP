<tokens>
<keyword> class </keyword>
<identifier> View </identifier>
<symbol> { </symbol>
<keyword> static </keyword>
<keyword> int </keyword>
<identifier> MAX_LENGTH </identifier>
<symbol> ; </symbol>
<keyword> static </keyword>
<identifier> String </identifier>
<identifier> FLAGS_MESSAGE </identifier>
<symbol> , </symbol>
<identifier> EMPTY </identifier>
<symbol> , </symbol>
<identifier> SLASH </identifier>
<symbol> ; </symbol>
<keyword> static </keyword>
<identifier> Image </identifier>
<identifier> TITLE_IMAGE </identifier>
<symbol> , </symbol>
<identifier> HELP_IMAGE </identifier>
<symbol> ; </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> init </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> MAX_LENGTH </identifier>
<symbol> = </symbol>
<integerConstant> 30 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> FLAGS_MESSAGE </identifier>
<symbol> = </symbol>
<stringConstant> Located bombs:  </stringConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> SLASH </identifier>
<symbol> = </symbol>
<stringConstant> / </stringConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> EMPTY </identifier>
<symbol> = </symbol>
<stringConstant>   </stringConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> TITLE_IMAGE </identifier>
<symbol> = </symbol>
<identifier> TitleImage </identifier>
<symbol> . </symbol>
<identifier> newImage </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> HELP_IMAGE </identifier>
<symbol> = </symbol>
<identifier> HelpImage </identifier>
<symbol> . </symbol>
<identifier> newImage </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> showMessage </identifier>
<symbol> ( </symbol>
<identifier> String </identifier>
<identifier> message </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> message </identifier>
<symbol> . </symbol>
<identifier> length </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> &gt; </symbol>
<identifier> MAX_LENGTH </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> do </keyword>
<identifier> View </identifier>
<symbol> . </symbol>
<identifier> eraseMessage </identifier>
<symbol> ( </symbol>
<identifier> MAX_LENGTH </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> View </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<identifier> message </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 2 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> eraseMessage </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> i </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> i </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> View </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> i </identifier>
<symbol> &lt; </symbol>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<identifier> EMPTY </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> i </identifier>
<symbol> = </symbol>
<identifier> i </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> showLocatedBombsMessage </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> located </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> total </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> View </identifier>
<symbol> . </symbol>
<identifier> showMessage </identifier>
<symbol> ( </symbol>
<identifier> FLAGS_MESSAGE </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<identifier> located </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<identifier> SLASH </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<identifier> total </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> getSquarePosition </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> i </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> j </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> marginX </identifier>
<symbol> , </symbol>
<identifier> marginY </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> marginX </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> marginY </identifier>
<symbol> = </symbol>
<integerConstant> 4 </integerConstant>
<symbol> * </symbol>
<integerConstant> 16 </integerConstant>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier> marginY </identifier>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> j </identifier>
<symbol> * </symbol>
<integerConstant> 16 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> * </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> marginX </identifier>
<symbol> + </symbol>
<identifier> i </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawFrame </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 497 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 48 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 46 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 47 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 47 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 47 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 62 </integerConstant>
<symbol> , </symbol>
<integerConstant> 497 </integerConstant>
<symbol> , </symbol>
<integerConstant> 62 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 63 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 63 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 62 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14 </integerConstant>
<symbol> , </symbol>
<integerConstant> 241 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 62 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 240 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 15 </integerConstant>
<symbol> , </symbol>
<integerConstant> 240 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 240 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawLine </identifier>
<symbol> ( </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 62 </integerConstant>
<symbol> , </symbol>
<integerConstant> 496 </integerConstant>
<symbol> , </symbol>
<integerConstant> 240 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> TITLE_IMAGE </identifier>
<symbol> . </symbol>
<identifier> draw </identifier>
<symbol> ( </symbol>
<integerConstant> 18 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> showHelp </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> HELP_IMAGE </identifier>
<symbol> . </symbol>
<identifier> draw </identifier>
<symbol> ( </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<integerConstant> 60 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawFail </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32765 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 16389 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8457 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2977 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1857 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3873 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12265 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1985 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2977 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8457 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 16389 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32765 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawHidden </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 27307 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 13654 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6819 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5458 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6827 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5462 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6827 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5462 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6827 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5462 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6827 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5462 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8191 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawBlank </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawMine </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7985 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7985 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 32765 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawExplosion </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 28397 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 18725 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9545 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 26669 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 20453 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15481 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1345 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15481 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 20453 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 26669 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9545 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 18725 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 28397 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawSelected </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8180 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8180 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawFlag </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 27307 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14326 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6715 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5662 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6859 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5662 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 6715 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 5878 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7915 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7230 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4107 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4110 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8191 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawFlagSelected </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7808 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7712 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7888 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7712 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7808 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7936 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7936 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7232 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4112 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4112 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8192 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw1 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 769 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 961 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 993 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw2 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3841 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1985 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 497 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 121 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw3 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4033 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4033 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw4 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3809 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3809 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3697 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3697 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw5 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 57 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 57 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw6 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 57 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 57 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw7 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1793 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1793 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 897 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw8 </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> location </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<identifier> location </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7225 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4081 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>
